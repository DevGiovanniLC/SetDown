<Window x:Class="SetDown.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="SetDown" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        Height="550" Width="655" Background="Transparent"  AllowsTransparency="True">

    <Window.Resources>
        <Style x:Key="RadioStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="#1A1A1A" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="#1B1A1A" MinWidth="15" MinHeight="15" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="5,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="Fill" TargetName="optionMark" Value="#1A1A1A" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="aliceblue" />
                                <Setter Property="Fill" TargetName="optionMark" Value="#1A1A1A" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleRounded" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="#1A1A1A" />
            <Setter Property="BorderBrush" Value="black" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1A1A1A" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#1A1A1A" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="AliceBlue" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#1B1A1A" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#1A1A1A" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="AliceBlue" />
                                <Setter Property="BorderBrush" TargetName="border" Value="AliceBlue" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#1A1A1A" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonExit" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="black" />
            <Setter Property="BorderBrush" Value="transparent" />
            <Setter Property="Foreground" Value="AliceBlue" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#CC2400" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#CC2400" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#711400" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#711400" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#1A1A1A" />
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="AliceBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonMinimize" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="black" />
            <Setter Property="BorderBrush" Value="transparent" />
            <Setter Property="Foreground" Value="AliceBlue" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-10,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#131313" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#131313" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="black" />
                                <Setter Property="BorderBrush" TargetName="border" Value="black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#1A1A1A" />
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="AliceBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ControlButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="AliceBlue" />
            <Setter Property="BorderBrush" Value="AliceBlue" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#1A1A1A" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1A1A1A" />
                                <Setter Property="BorderBrush" TargetName="border" Value="black" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1A1A1A" />
                                <Setter Property="BorderBrush" TargetName="border" Value="#1A1A1A" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border  Background="black" CornerRadius="20" Margin="10,10,0,0" BorderThickness="1">
        <Grid Name="MainPage">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!-- Titlebar -->
            <Rectangle Height="50" Grid.ColumnSpan="2" VerticalAlignment="Top" MouseDown="DragWindow" Fill="black" RadiusX="20" RadiusY="20" Cursor="Hand" HorizontalAlignment="Center" Width="538" />

            <Button Style="{DynamicResource ButtonExit}" Grid.Column="1" Content="✖" HorizontalAlignment="Right" Height="41" Margin="0,0,0,0" VerticalAlignment="Top" Width="45"  Foreground="AliceBlue" BorderBrush="Transparent" FontSize="18" Click="CloseApplication" Cursor="Hand">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="0,20,0,0" />
                    </Style>
                </Button.Resources>
            </Button>

            <Button Style="{DynamicResource ButtonMinimize}" Grid.Column="1" Content="-" HorizontalAlignment="Right" Height="41" Margin="0,0,46,0" VerticalAlignment="Top" Width="45" Foreground="AliceBlue" BorderBrush="Transparent" FontSize="40" Click="MinimizeWindow" Cursor="Hand" />

            <Button Style="{DynamicResource ButtonMinimize}" Grid.Column="1" HorizontalAlignment="Right" Height="41" Margin="0,0,93,0" VerticalAlignment="Top" Width="45" Foreground="AliceBlue" BorderBrush="Transparent" Click="SetConfig" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Cursor="Hand">
                <TextBlock FontSize="16" FontWeight="UltraLight" Margin="0,10,0,0">🔧</TextBlock>
            </Button>

            <!-- CounterDisplay -->
            <Rectangle Name="BorderCounter" Fill="#1A1A1A"  Grid.Column="1" HorizontalAlignment="Center" Height="75" Width="75" Margin="225, 65, 0, 0" VerticalAlignment="Top"  Visibility="Hidden" />
            <Label Grid.Column="1" Content="00:00:00" HorizontalAlignment="Left" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0,65,0,0" VerticalAlignment="Top" FontSize="64"  Name="graphCounter" Foreground="AliceBlue" FontFamily="Courier new" FontWeight="UltraBold" />

            <!-- Buttons -->
            <Button Style="{DynamicResource ButtonStyleRounded}" Click="CancelTimeout" Grid.Column="1" Content="Cancel" Height="70" Width="120" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,60" FontSize="20" Foreground="AliceBlue" Cursor="Hand" FontWeight="SemiBold">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10" />
                    </Style>
                </Button.Resources>
            </Button>

            <Button Style="{DynamicResource ButtonStyleRounded}"  Click="AcceptTimeout" Grid.Column="0" Content="Accept" Height="70" Width="120" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,60"  FontSize="20" Foreground="AliceBlue" Cursor="Hand" FontWeight="SemiBold">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10" />
                    </Style>
                </Button.Resources>
            </Button>

            <!-- Radiobuttons -->
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton0" Height="50" Width="200" Margin="60,80,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="03:00:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold" Margin="12,0,0,-3" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton1" Height="50" Width="200" Margin="60,130,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="02:30:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold"  Margin="12,0,0,-3" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton2" Height="50" Width="200" Margin="60,180,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="02:00:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold"  Margin="12,0,0,-3" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton3" Height="50" Width="200" Margin="60,230,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="01:30:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold"  Margin="12,0,0,-3" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton4" Height="50" Width="200" Margin="60,280,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="01:00:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold"  Margin="12,0,0,-3" />
            </RadioButton>
            <RadioButton Style="{DynamicResource RadioStyle}" Name="RadioButton5" Height="50" Width="200" Margin="60,330,0,0"  HorizontalAlignment="Left" VerticalAlignment="Top" Checked="SetTimer" VerticalContentAlignment="Center">
                <TextBlock Text="00:30:00" FontFamily="Courier New" Foreground="AliceBlue" FontSize="30" FontWeight="DemiBold" Margin="12,0,0,-3" />
            </RadioButton>

            <!-- Images -->
            <Image Name="clock" Source="resourses\icon.png" Grid.Column="1" Margin="45,80,45,100" Focusable="False"  HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Image Name="owl" Source="resourses\icon2.png" Grid.Column="1" Margin="45,100,45,115" Focusable="False"  HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" />

            <!-- Control Buttons -->
            <Button Name="Right" Style="{DynamicResource ControlButtonStyle}" Grid.Column="1" HorizontalAlignment="Left" Height="50" Width="22" Margin="35,0,0,70" VerticalAlignment="Bottom"  Click="RightDisplay">
                <TextBlock FontSize="18" Margin="2,-2,0,0" Foreground="Black">▶</TextBlock>
            </Button>

            <Button Name="Left" Style="{DynamicResource ControlButtonStyle}" Grid.Column="1" HorizontalAlignment="Left" Height="50" Width="22" Margin="10,0,0,70" VerticalAlignment="Bottom"  Click="LeftDisplay">
                <TextBlock FontSize="18" Margin="-2,-2,0,0" Foreground="Black">◀</TextBlock>
            </Button>

            <Button Name="Down" Style="{DynamicResource ControlButtonStyle}" Grid.Column="0" HorizontalAlignment="Right" Height="23" Width="45" Margin="0,0,12,70" VerticalAlignment="Bottom"  Click="SubstractFromCounter">
                <TextBlock FontSize="18" Margin="-1,-4,0,0" Foreground="Black">▼</TextBlock>
            </Button>

            <Button Name="Up" Style="{DynamicResource ControlButtonStyle}" Grid.Column="0" HorizontalAlignment="Right" Height="23" Width="45" Margin="0,0,12,97" VerticalAlignment="Bottom"  Click="AddToCounter">
                <TextBlock FontSize="18" Margin="-1,-6,0,0" Foreground="Black">▲</TextBlock>
            </Button>
            <Label Content="Time outs (h:m:s)" HorizontalAlignment="Left" Margin="95,50,0,0" VerticalAlignment="Top"  Foreground="AliceBlue" FontSize="16" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
        </Grid>
    </Border>
</Window>